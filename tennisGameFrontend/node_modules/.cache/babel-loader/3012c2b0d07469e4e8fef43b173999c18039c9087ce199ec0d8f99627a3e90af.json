{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abder\\\\IdeaProjects\\\\tennisScoreComputer\\\\tennisGameFrontend\\\\src\\\\components\\\\TennisGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TennisScore() {\n  _s();\n  const [sequence, setSequence] = useState(\"\");\n  const [scores, setScores] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"/api/tennis/play\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sequence\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Response:\", data);\n      setScores(data);\n    } catch (err) {\n      console.error(\"Fetch error:\", err.message);\n      // Optionally display error to user\n    }\n  };\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //\n  //     // const response = await fetch(\"/api/tennis/play\", {\n  //     //     method: \"POST\",\n  //     //     headers: { \"Content-Type\": \"text/plain\" },\n  //     //     body: sequence,\n  //     // });\n  //     fetch(\"/api/tennis/play\", {\n  //         method: \"POST\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify({ sequence }),\n  //     })\n  //         .then(res => {\n  //             if (!res.ok) {\n  //                 throw new Error(`HTTP error! Status: ${res.status}`);\n  //             }\n  //             return res.json();\n  //         })\n  //         .then(data => {\n  //             console.log(\"Response:\", data);\n  //         })\n  //         .catch(err => {\n  //             console.error(\"Fetch error:\", err.message);\n  //         });\n  //\n  //     const data = await response.json();\n  //     setScores(data);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tennis Score Kata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sequence,\n        onChange: e => setSequence(e.target.value.toUpperCase().replace(/[^AB]/g, \"\")),\n        placeholder: \"Entrez la s\\xE9quence, ex: ABABAA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scores.map((score, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: score\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(TennisScore, \"JqHarfnrMlEj39+15bpM+nfnxuw=\");\n_c = TennisScore;\nexport default TennisScore;\nvar _c;\n$RefreshReg$(_c, \"TennisScore\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TennisScore","_s","sequence","setSequence","scores","setScores","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","err","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","toUpperCase","replace","placeholder","map","score","idx","_c","$RefreshReg$"],"sources":["C:/Users/abder/IdeaProjects/tennisScoreComputer/tennisGameFrontend/src/components/TennisGame.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TennisScore() {\r\n    const [sequence, setSequence] = useState(\"\");\r\n    const [scores, setScores] = useState([]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await fetch(\"/api/tennis/play\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ sequence }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Response:\", data);\r\n            setScores(data);\r\n        } catch (err) {\r\n            console.error(\"Fetch error:\", err.message);\r\n            // Optionally display error to user\r\n        }\r\n    };\r\n\r\n    // const handleSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //\r\n    //     // const response = await fetch(\"/api/tennis/play\", {\r\n    //     //     method: \"POST\",\r\n    //     //     headers: { \"Content-Type\": \"text/plain\" },\r\n    //     //     body: sequence,\r\n    //     // });\r\n    //     fetch(\"/api/tennis/play\", {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify({ sequence }),\r\n    //     })\r\n    //         .then(res => {\r\n    //             if (!res.ok) {\r\n    //                 throw new Error(`HTTP error! Status: ${res.status}`);\r\n    //             }\r\n    //             return res.json();\r\n    //         })\r\n    //         .then(data => {\r\n    //             console.log(\"Response:\", data);\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.error(\"Fetch error:\", err.message);\r\n    //         });\r\n    //\r\n    //     const data = await response.json();\r\n    //     setScores(data);\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Tennis Score Kata</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={sequence}\r\n                    onChange={e => setSequence(e.target.value.toUpperCase().replace(/[^AB]/g,\"\"))}\r\n                    placeholder=\"Entrez la sÃ©quence, ex: ABABAA\" />\r\n                <button type=\"submit\">Envoyer</button>\r\n            </form>\r\n            <div>\r\n                {scores.map((score, idx) => (\r\n                    <div key={idx}>{score}</div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TennisScore;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}